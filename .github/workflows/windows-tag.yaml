name: Build and Tag

on:
  push:
    branches:
      - master

    tags:
      - '*'
  pull_request:
    branches:
      - develop
      - master

jobs:
  build:
    name: Build windows only (${{ matrix.python-version }}
    runs-on: windows-latest  # Only run on Windows
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        #os: [ubuntu-latest, windows-latest]
        python-version: [ '3.11']
        solver: ["classic"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Fetch tags
        run: |
            git fetch --tags
            
      - name: Get Version from Branch name
        shell: bash -el {0}
        id: get_version
        run: |
          echo "RELEASE_VERSION=$(echo ${BRANCH_NAME} | grep -oP 'release/\K\d+\.\d+\.\d+')" >> $GITHUB_ENV
          echo "BRANCH_NAME: ${BRANCH_NAME}"
          echo "RELEASE_VERSION: ${{env.RELEASE_VERSION }}"
        env:
          # work for push and pr
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

          
      - name: Use Version in Build
        shell: bash -el {0}
        run: echo "Building version $RELEASE_VERSION"
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
           python-version: '3.11'
           
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel  setuptools setuptools_scm 
    
        
      - name: Get the version tag
        shell: bash -el {0}
        id: vars
        run: |
            echo "Current Branch: ${{ github.ref }}"
            echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
            echo "Tag name from github.ref_name: ${{  github.ref_name }}"
            echo "Tag RELEASE_VERSION=${{env.RELEASE_VERSION }}"
      
        

      - name: Get version from setuptools_scm
        shell: bash -el {0}
        id: version
        run: echo "SCM_VERSION=$(python -c 'import setuptools_scm; print(setuptools_scm.get_version())')" >> $GITHUB_ENV   
        
      - name: Tag Release
        env:
          GIT_PAT: ${{ secrets.TEST_LG_SWISSTOPO }}
        run: |
          echo "v${{env.SCM_VERSION }}"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag -a "v${{env.RELEASE_VERSION }}" -m "Release version ${{env.RELEASE_VERSION }}"
   
          git push https://${{ secrets.PAT_TOKEN }}@github.com/procrastinatio/tagging.git refs/tags/v${{env.RELEASE_VERSION }}
         
        
      
     
