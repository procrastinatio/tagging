name: Build and Release

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build python-semantic-release
        pip install -U setuptools setuptools_scm wheel
    - name: Build package
      run: python -m build
      
    # Get version for master branch
    - name: Get Next Version
      if: github.ref == 'refs/heads/master'
      id: version
      run: |
        VERSION=$(semantic-release version --print)
        echo "Next version will be: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    # For develop branch and PRs, use commit SHA and event type
    - name: Get Development ID
      if: github.ref != 'refs/heads/master'
      id: dev_version
      run: |
        SHA=$(git rev-parse --short HEAD)
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          ID="pr-${{ github.event.pull_request.number }}-$SHA"
        else
          ID="dev-$SHA"
        fi
        echo "version=$ID" >> $GITHUB_OUTPUT

    # Set artifact name based on context
    - name: Set Artifact Name
      id: artifact_name
      run: |
        if [ "${{ github.ref }}" = "refs/heads/master" ]; then
          NAME="tagging-v${{ steps.version.outputs.version }}"
        else
          NAME="tagging-${{ steps.dev_version.outputs.version }}"
        fi
        echo "name=$NAME" >> $GITHUB_OUTPUT

    # Upload artifacts with computed name
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.artifact_name.outputs.name }}
        path: dist/*


    # Only run semantic release on master branch
    - name: Semantic Release
      if: github.ref == 'refs/heads/master'
      env:
        GH_TOKEN: ${{ secrets.GIT_PAT }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        semantic-release publish
    # Create GitHub Release with artifacts
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        name: v${{ steps.version.outputs.version }}
        tag_name: v${{ steps.version.outputs.version }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
